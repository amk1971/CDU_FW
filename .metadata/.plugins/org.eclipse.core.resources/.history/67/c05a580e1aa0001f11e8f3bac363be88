/*
 * NAVSCreen.c
 *
 *  Created on: Oct 30, 2024
 *      Author: LENOVO
 */

#include "nextionlcd.h"
#include "switches.h"

bool flag = false;


typedef enum
{
	Idle = 0,
	SwapKey,
	page0,
	page1,
	RightSoftKey1,
	RightSoftKey2,
	RightSoftKey3,
	RightSoftKey4,
	RightSoftKey5,
	RightSoftKey6,
	RightSoftKey7,
	RightSoftKey8,
	StandByEdit
} NAVSCREENState;

extern NavParams NavScreenParams;
extern keyPad_t keyPad;

typedef enum {
	ActiveFreq = 0,
	StandbyFreq,
	P1, P2, P3, P4, P5, P6, P7, P8
}NavParamNumber;

NAVSCREENState NavScreenState = Idle;
int NAVScreenPage = 0;

returnStatus ChangeNavParam(NavParamNumber PNum, void * PVal);


returnStatus DispNAVscreen(NavParams * Params)
{
	static NavParams oldParams;
	char Text[50];

	sprintf(Text, "S %f", Params->Standby);
	UpdateParamLCD(Left1, Text);
//	ChangeNavParam(StandbyFreq, (void *) &Params->Standby);
	UpdateParamLCD(Left2, "");
	UpdateParamLCD(Left3, "VOL");
	UpdateParamLCD(Left4, "PROG");
	UpdateParamLCD(Center1, "NAV");
	sprintf(Text, "A %f", Params->Active);
	UpdateParamLCD(Center2, Text);
//	ChangeNavParam(ActiveFreq, (void *) &Params->Active);
	UpdateParamLCD(Center3, "");
	UpdateParamLCD(Center4, "");
	UpdateParamLCD(Center5, "");

	if(!(Params->page))
	{
		UpdateParamLCD(Right1, "P 1");
		UpdateParamLCD(Right2, "P 2");
		UpdateParamLCD(Right3, "P 3");
		UpdateParamLCD(Right4, "P 4");
	}
	else
	{
		UpdateParamLCD(Right1, "P 5");
		UpdateParamLCD(Right2, "P 6");
		UpdateParamLCD(Right3, "P 7");
		UpdateParamLCD(Right4, "P 8");
	}

	return success;
}

returnStatus ChangeNavParam(NavParamNumber PNum, void * PVal){
	char Text[50];

	if(PNum == ActiveFreq){
		sprintf(Text, "A %f", *(float *)PVal);
		UpdateParamLCD(Center2, Text);
	}
	if(PNum == StandbyFreq){
		sprintf(Text, "S %f", *(float *)PVal);
		UpdateParamLCD(Left1, Text);
	}
}

void swapFreq(NavParams * Param)
{
	// Swap Active and Standby
	float temp = Param->Active;
	Param->Active = Param->Standby;
	Param->Standby = temp;
}

uint16_t NavScreenStateMachine(NavParams * Params){

	uint16_t ret;
	switch (NavScreenState){
	case Idle:

		if(soft_keysTest() == L1)
		{
			NavScreenState = StandByEdit;
			configBgcolorLCD(Left1, BLACKBG);
			configfontcolorLCD(Left1, WHITEFONT);
		}

		ret = get_ScanKode_from_buffer();
		if (ret == 0x008)
		{
			NavScreenState = SwapKey;
		}
		break;
	case StandByEdit:	//Use BACK button to edit and OK to confirm and save .
						//The new standby frequency is saved only when OK button is pressed.
						//If the OK button is not pressed with in 30 sec then the standby frequency reverts to old value.

		ret = get_ScanKode_from_buffer();
		if(ret == 0x110) // using B button instead of BACK
		{


		}
		if(ret == 0x110) // OK Button
		{
			NavScreenState = idle;
			configBgcolorLCD(Left1, TRANSPARENTBG);
			configfontcolorLCD(Left1, BLACKFONT);

		}


		break;

	case SwapKey:
		swapFreq(&Params);
		ChangeNavParam(StandbyFreq, (void *) &Params->Standby);
		ChangeNavParam(ActiveFreq, (void *) &Params->Active);
		NavScreenState = Idle;

		break;
	case page0:

		break;
	case page1:

		break;

	default:
		break;
	}

	return ret;

}
